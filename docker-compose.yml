version: '3.8'

services:

  mongo:
    restart: always
    networks:
      - elk
    container_name: mongo_27018
    image: mongo:latest
    hostname: mongo
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db

      
  node-red:
    container_name: nodeRED_1881
    environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_URL: http://elasticsearch:9200/
    image: nodered/node-red:latest
    user: "0:1000"
    restart: unless-stopped
    volumes:
      - "./node-red:/data"
    ports:
      - "1881:1880"
    networks:
      - elk
    
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.9
    container_name: logstash
    volumes:
      - ./logstash:/config-dir
    command: logstash -f /config-dir/logstash.conf
    ports:
      - "9600:9600"     # API interna de Logstash
    depends_on:
      - elasticsearch
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk

  # Service neeeded for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    restart: always
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - elk

  # Service for deploying Kafka
  broker:
    image: confluentinc/cp-kafka:7.0.1
    restart: always
    container_name: broker
    hostname: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      #  - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    networks:
      - elk
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
networks:
  elk:
    driver: bridge

volumes:
  mongo_data:
    driver: local
  elastic_data:
    driver: local
